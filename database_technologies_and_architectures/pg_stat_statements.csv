"userid","dbid","toplevel","queryid","query","plans","total_plan_time","min_plan_time","max_plan_time","mean_plan_time","stddev_plan_time","calls","total_exec_time","min_exec_time","max_exec_time","mean_exec_time","stddev_exec_time","rows","shared_blks_hit","shared_blks_read","shared_blks_dirtied","shared_blks_written","local_blks_hit","local_blks_read","local_blks_dirtied","local_blks_written","temp_blks_read","temp_blks_written","blk_read_time","blk_write_time","temp_blk_read_time","temp_blk_write_time","wal_records","wal_fpi","wal_bytes","jit_functions","jit_generation_time","jit_inlining_count","jit_inlining_time","jit_optimization_count","jit_optimization_time","jit_emission_count","jit_emission_time"
16384,16387,True,"3889870412600653792","COPY ""psutil_cpu"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","12","16.362457","0.608","2.098125","1.3635380833333333","0.5602800577035052","12","6","18","18","0","0","0","0","0","0","0","10.133878","0","0","0","24","0","5076","0","0","0","0","0","0","0","0"
10,16385,True,"-9218272773566744999","select /* pgwatch2_generated */ rolsuper
			   from pg_roles r where rolname = session_user","0","0","0","0","0","0","73","14.169703999999998","0.0048330000000000005","5.2208749999999995","0.1941055342465754","0.7119114551443568","73","72","1","0","0","0","0","0","0","0","0","0.019083","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-2526987929434994805","select /* pgwatch2_generated */ (regexp_matches(
			regexp_replace(current_setting($1), $2, $3, $4),
			$5)
			)[$6]::text as ver, pg_is_in_recovery(), current_database()::text","0","0","0","0","0","0","73","197.920421","0.0045839999999999995","40.688250000000004","2.7112386438356157","6.77461382835923","73","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-9140875673173484855","COPY ""cpu_load"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","12.980999","0.083875","1.875291","0.5408749583333334","0.46702697866883447","24","14","34","34","0","0","0","0","0","0","0","6.174709","0","0","0","48","0","5496","0","0","0","0","0","0","0","0"
10,25481,True,"-7225261453483776278","-- using 1687011169 as a seed to the RNG


select
	c_custkey,
	c_name,
	sum(l_extendedprice * ($1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date $2
	and o_orderdate < date $3 + interval $4 month
	and l_returnflag = $5
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT $6","0","0","0","0","0","0","6","41546.132099999995","6122.776502","8310.123837000001","6924.35535","793.3648954182789","120","19231","4275791","0","227","0","0","0","0","239430","239610","11203.986029","5.780365000000001","487.108607","1610.5101089999998","0","0","0","210","7.552253","6","59.960585","6","855.552126","6","537.782926"
10,16385,True,"7223792198798457014","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  archived_count,
  failed_count,
  case when coalesce(last_failed_time, $3::timestamptz) > coalesce(last_archived_time, $4::timestamptz) then $5 else $6 end as is_failing_int,
  extract($7 from now() - last_failed_time)::int8 as seconds_since_last_failure
from
  pg_stat_archiver
where
  current_setting($8) in ($9, $10)","0","0","0","0","0","0","24","12.975956999999994","0.140292","7.274374999999999","0.5406648749999999","1.4076989216448033","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"8791495898096813209","select pg_stat_statements_reset()","0","0","0","0","0","0","1","0.08366699999999999","0.08366699999999999","0.08366699999999999","0.08366699999999999","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-6363102693713380219","COPY ""configured_dbs"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","2","13.204249999999998","3.45925","9.745","6.602124999999999","3.142874999999999","2","79","27","8","0","0","0","0","0","0","0","6.899293","0","0","0","6","0","926","0","0","0","0","0","0","0","0"
10,16385,True,"913126053716103344","WITH q_locks AS (
  select
    *
  from
    pg_locks
  where
    pid != pg_backend_pid()
    and database = (select oid from pg_database where datname = current_database())
)
SELECT
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  locktypes AS tag_locktype,
  coalesce((select count(*) FROM q_locks WHERE locktype = locktypes), $3) AS count
FROM
  unnest($4::text[]) locktypes","0","0","0","0","0","0","24","85.47170600000001","0.08841600000000001","16.963542","3.561321083333333","4.1367758253223395","216","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-2770144370203087134","SELECT set_config($1,$2,$3) FROM pg_settings WHERE name = $4","0","0","0","0","0","0","1","6.249833","6.249833","6.249833","6.249833","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-5991473982720122548","COPY ""locks"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","19.154001","0.114834","2.973334","0.798083375","0.7063752567466538","216","643","93","77","4","0","0","0","0","0","0","12.966782999999998","0","0","0","466","0","84100","0","0","0","0","0","0","0","0"
16384,16387,True,"1492420120991510021","COPY ""backends"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","11.107374","0.08675","2.079959","0.4628072499999999","0.400310053441522","24","16","36","37","2","0","0","0","0","0","0","5.030754000000001","0","0","0","48","0","15768","0","0","0","0","0","0","0","0"
10,25481,True,"-683272743294003097","select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT $1","0","0","0","0","0","0","1","12500.036422000001","12500.036422000001","12500.036422000001","12500.036422000001","0","1","32","1124761","0","0","0","0","0","0","13783","22214","5899.060743","0","38.036378","149.832393","0","0","0","41","2.625001","1","39.296374","1","250.353874","1","161.836335"
10,16385,True,"3411497529518106675","SELECT
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  round(cpu_utilization::numeric, $3)::float as cpu_utilization,
  round(load_1m_norm::numeric, $4)::float as load_1m_norm,
  round(load_1m::numeric, $5)::float as load_1m,
  round(load_5m_norm::numeric, $6)::float as load_5m_norm,
  round(load_5m::numeric, $7)::float as load_5m,
  round(""user""::numeric, $8)::float as ""user"",
  round(system::numeric, $9)::float as system,
  round(idle::numeric, $10)::float as idle,
  round(iowait::numeric, $11)::float as iowait,
  round(irqs::numeric, $12)::float as irqs,
  round(other::numeric, $13)::float as other
from
  get_psutil_cpu()","0","0","0","0","0","0","12","7202.108131999999","513.788668","921.6373759999999","600.1756776666666","143.62341051287947","12","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16385,True,"-5121105767905558510","select /* pgwatch2_generated */
		  md_unique_name, md_group, md_dbtype, md_hostname, md_port, md_dbname, md_user, coalesce(md_password, $1) as md_password,
		  coalesce(p.pc_config, md_config)::text as md_config, coalesce(s.pc_config, md_config_standby, $2::jsonb)::text as md_config_standby,
		  md_statement_timeout_seconds, md_sslmode, md_is_superuser,
		  coalesce(md_include_pattern, $3) as md_include_pattern, coalesce(md_exclude_pattern, $4) as md_exclude_pattern,
		  coalesce(md_custom_tags::text, $5) as md_custom_tags, md_root_ca_path, md_client_cert_path, md_client_key_path,
		  md_password_type, coalesce(md_host_config, $6)::text as md_host_config, md_only_if_master
		from
		  pgwatch2.monitored_db
	          left join
		  pgwatch2.preset_config p on p.pc_name = md_preset_config_name /* primary preset if any */
	          left join
		  pgwatch2.preset_config s on s.pc_name = md_preset_config_name_standby /* standby preset if any */
		where
		  md_is_enabled","0","0","0","0","0","0","12","9.61754","0.038999","5.015625","0.8014616666666667","1.3039073534031815","12","33","27","0","0","0","0","0","0","0","0","3.254084","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-6015959107147170013","WITH q_locks AS (
  select
    *
  from
    pg_locks
  where
    pid != pg_backend_pid()
    and database = (select oid from pg_database where datname = current_database())
)
SELECT
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  lockmodes AS tag_lockmode,
  coalesce((select count(*) FROM q_locks WHERE mode = lockmodes), $3) AS count
FROM
  unnest($4::text[]) lockmodes","0","0","0","0","0","0","24","36.53182700000001","0.056332","12.616624","1.5221594583333335","2.4619122655408368","192","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-6885685155318614505","SELECT
    (extract($1 FROM now()) * $2)::int8 AS epoch_ns,
    *
FROM (
    SELECT
        $3::text AS object_type,
        grantee::text AS tag_role,
        quote_ident(table_schema) || $4 || quote_ident(table_name) AS tag_object,
        privilege_type
    FROM
        information_schema.table_privileges
        /* includes also VIEW-s actually */
    WHERE
        NOT grantee = ANY (
            SELECT
                rolname
            FROM
                pg_roles
            WHERE
                rolsuper
                OR oid < $5)
            AND NOT table_schema IN ($6, $7)
            /*
             union all

             select
             -- quite a heavy query currently, maybe faster directly via pg_attribute + has_column_privilege?
            'column' AS object_type,
            grantee::text AS tag_role,
            quote_ident(table_schema) || '.' || quote_ident(table_name) AS tag_object,
            privilege_type
        FROM
            information_schema.column_privileges cp
        WHERE
            NOT table_schema IN ('pg_catalog', 'information_schema')
            AND NOT grantee = ANY (
                SELECT
                    rolname
                FROM
                    pg_roles
                WHERE
                    rolsuper
                    OR oid < 16384)
                AND NOT EXISTS (
                    SELECT
                        *
                    FROM
                        information_schema.table_privileges
                    WHERE
                        table_schema = cp.table_schema
                        AND table_name = cp.table_name
                        AND grantee = cp.grantee
                        AND privilege_type = cp.privilege_type) */
                UNION ALL
                SELECT
                    $8 AS object_type,
                    grantee::text AS tag_role,
                    quote_ident(routine_schema) || $9 || quote_ident(routine_name) AS tag_object,
                    privilege_type
                FROM
                    information_schema.routine_privileges
                WHERE
                    NOT routine_schema IN ($10, $11)
                    AND NOT grantee = ANY (
                        SELECT
                            rolname
                        FROM
                            pg_roles
                        WHERE
                            rolsuper
                            OR oid < $12)
                    UNION ALL
                    SELECT
                        $13 AS object_type,
                        r.rolname::text AS tag_role,
                        quote_ident(n.nspname) AS tag_object,
                        p.perm AS privilege_type
                    FROM
                        pg_catalog.pg_namespace AS n
                    CROSS JOIN pg_catalog.pg_roles AS r
                    CROSS JOIN (
                        VALUES ($14),
                            ($15)) AS p (perm)
                    WHERE
                        NOT n.nspname IN ($16, $17)
                            AND n.nspname NOT LIKE $18
                            AND NOT r.rolsuper
                            AND r.oid >= $19
                            AND has_schema_privilege(r.oid, n.oid, p.perm)
                        UNION ALL
                        SELECT
                            $20 AS object_type,
                            r.rolname::text AS role_name,
                            quote_ident(datname) AS tag_object,
                            p.perm AS permission
                        FROM
                            pg_catalog.pg_database AS d
                        CROSS JOIN pg_catalog.pg_roles AS r
                        CROSS JOIN (
                            VALUES ($21),
                                ($22),
                                ($23)) AS p (perm)
                        WHERE
                            d.datname = current_database()
                                AND NOT r.rolsuper
                                AND r.oid >= $24
                                AND has_database_privilege(r.oid, d.oid, p.perm)
                            UNION ALL
                            SELECT
                                $25 AS object_type,
                                rolname::text AS role_name,
                                rolname::text AS tag_object,
                                $26 AS permission
                            FROM
                                pg_catalog.pg_roles
                            WHERE
                                rolsuper
                            UNION ALL
                            SELECT
                                $27 AS object_type,
                                rolname::text AS role_name,
                                rolname::text AS tag_object,
                                $28 AS permission
                            FROM
                                pg_catalog.pg_roles
                            WHERE
                                rolcanlogin) y","0","0","0","0","0","0","5","93.526541","10.966292000000001","25.797417","18.7053082","5.830666077296192","385","617","48","0","0","0","0","0","0","0","0","0.292416","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"2626751255145609859","-- using 1687011170 as a seed to the RNG


select
	sum(l_extendedprice) / $1 as avg_yearly
from
	lineitem,
	part,
	(SELECT l_partkey AS agg_partkey, $2 * avg(l_quantity) AS avg_quantity FROM lineitem GROUP BY l_partkey) part_agg
where
	p_partkey = l_partkey
	and agg_partkey = l_partkey
	and p_brand = $3
	and p_container = $4
	and l_quantity < avg_quantity
LIMIT $5","0","0","0","0","0","0","6","117332.146347","18241.144384","21761.600552","19555.357724499998","1069.3142226856924","6","15214","3701486","0","119","0","0","0","0","978990","1846644","14444.005794999997","1.795793","5208.420668999999","10415.474678999999","0","0","0","198","12.615001","6","113.446","6","764.676792","6","524.970324"
10,25481,True,"-9102621307683535516","SET DateStyle=ISO","0","0","0","0","0","0","1","0.674708","0.674708","0.674708","0.674708","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"-3849318333554553288","SELECT id FROM org","0","0","0","0","0","0","24","14.64738","0.026125000000000002","4.303083","0.6103074999999999","1.1028342537999156","24","7","17","0","0","0","0","0","0","0","0","9.361208999999999","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"8713024478130432060","SELECT ""id"", ""org_id"", ""namespace"", ""key"", ""value"", ""created"", ""updated"" FROM ""kv_store"" WHERE ""org_id""=$1 AND ""namespace""=$2 AND ""key""=$3 LIMIT $4","0","0","0","0","0","0","2","3.794707","1.655833","2.138874","1.8973535","0.24152049999999997","2","2","2","0","0","0","0","0","0","0","0","0.443084","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"905976906289400631","SET client_min_messages=notice","0","0","0","0","0","0","1","0.015417","0.015417","0.015417","0.015417","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"7377167939404911163","DELETE FROM dashboard_snapshot WHERE expires < $1","0","0","0","0","0","0","2","0.680625","0.23708400000000002","0.44354099999999996","0.3403125","0.10322849999999999","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"6918813626601998185","-- using 1687011171 as a seed to the RNG


select
	s_name,
	s_address
from
	supplier,
	nation
where
	s_suppkey in (
		select
			ps_suppkey
		from
			partsupp,
			(
				select
					l_partkey agg_partkey,
					l_suppkey agg_suppkey,
					$1 * sum(l_quantity) AS agg_quantity
				from
					lineitem
				where
					l_shipdate >= date $2
					and l_shipdate < date $3 + interval $4 year
				group by
					l_partkey,
					l_suppkey
			) agg_lineitem
		where
			agg_partkey = ps_partkey
			and agg_suppkey = ps_suppkey
			and ps_partkey in (
				select
					p_partkey
				from
					part
				where
					p_name like $5
			)
			and ps_availqty > agg_quantity
	)
	and s_nationkey = n_nationkey
	and n_name = $6
order by
	s_name
LIMIT $7","0","0","0","0","0","0","6","55675.016234","8060.159254","10710.256255","9279.169372333334","1056.3369882186043","6","610542","3622572","0","26","0","0","0","0","231342","232428","14348.360652","0.6022909999999999","484.155756","855.2308259999999","0","0","0","258","7.566756","6","68.87645900000001","6","893.449084","6","625.9278780000001"
16384,16387,True,"3694949039461716331","COMMIT","0","0","0","0","0","0","93","0.19282899999999986","0.000583","0.037625","0.0020734301075268813","0.004070331106971995","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"8796470509492364351","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  numbackends,
  xact_commit,
  xact_rollback,
  blks_read,
  blks_hit,
  tup_returned,
  tup_fetched,
  tup_inserted,
  tup_updated,
  tup_deleted,
  conflicts,
  temp_files,
  temp_bytes,
  deadlocks,
  blk_read_time,
  blk_write_time,
  extract($3 from (now() - coalesce((pg_stat_file($4, $5)).modification, pg_postmaster_start_time())))::int8 as postmaster_uptime_s,
  checksum_failures,
  extract($6 from (now() - checksum_last_failure))::int8 as checksum_last_failure_s,
  case when pg_is_in_recovery() then $7 else $8 end as in_recovery_int,
  system_identifier::text as tag_sys_id,
  session_time::int8,
  active_time::int8,
  idle_in_transaction_time::int8,
  sessions,
  sessions_abandoned,
  sessions_fatal,
  sessions_killed
from
  pg_stat_database, pg_control_system()
where
  datname = current_database()","0","0","0","0","0","0","24","200.40295999999998","0.186583","16.152832999999998","8.35012333333333","4.788925136405651","24","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"3694949039461716331","COMMIT","0","0","0","0","0","0","14","0.05737400000000001","0.000458","0.022208","0.004098142857142857","0.0063529697201628555","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-3200963977824915130","SELECT oid, pg_catalog.format_type(oid, $2) AS typname FROM pg_catalog.pg_type WHERE oid = ANY($1) ORDER BY oid","0","0","0","0","0","0","1","0.038999","0.038999","0.038999","0.038999","0","1","3","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"6268624730280792423","select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT $1","0","0","0","0","0","0","1","7782.941129","7782.941129","7782.941129","7782.941129","0","1","32","1124761","0","0","0","0","0","0","13783","22214","2029.966771","0","21.131229","101.023958","0","0","0","41","3.091747","1","35.008084","1","244.031916","1","161.564043"
10,25481,True,"-1086153583272167779","-- using 1687011167 as a seed to the RNG


select
	l_returnflag,
	l_linestatus,
	sum(l_quantity) as sum_qty,
	sum(l_extendedprice) as sum_base_price,
	sum(l_extendedprice * ($1 - l_discount)) as sum_disc_price,
	sum(l_extendedprice * ($2 - l_discount) * ($3 + l_tax)) as sum_charge,
	avg(l_quantity) as avg_qty,
	avg(l_extendedprice) as avg_price,
	avg(l_discount) as avg_disc,
	count(*) as count_order
from
	lineitem
where
	l_shipdate <= date $4 - interval $5 day
group by
	l_returnflag,
	l_linestatus
order by
	l_returnflag,
	l_linestatus
LIMIT $6","0","0","0","0","0","0","6","141890.81535699998","21997.114552","25979.702097","23648.469226166668","1426.0040365382265","6","192","3374178","0","0","0","0","0","0","0","0","13253.167598999999","0","0","0","0","0","0","78","9.776917","6","58.803083","6","715.19925","6","552.807088"
10,16385,True,"3780966001651565908","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  name as tag_setting,
  coalesce(reset_val, $3) as value
from
  pg_settings","0","0","0","0","0","0","5","38.66046","4.355376000000001","13.729125","7.732092000000001","3.2042802113839546","1830","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-4343704713281312290","COPY ""kpi"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","12","6.47225","0.121042","2.119541","0.5393541666666668","0.5379609656162848","12","6","20","18","1","0","0","0","0","0","0","2.9172910000000005","0","0","0","24","0","8734","0","0","0","0","0","0","0","0"
10,16385,True,"-3563701332022565493","select /* pgwatch2_generated */
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  count(*) as total,
  count(*) FILTER (WHERE ssl) as ""on"",
  count(*) FILTER (WHERE NOT ssl) as ""off""
FROM
  pg_stat_ssl AS s,
  pg_stat_activity AS a
WHERE
  a.pid = s.pid
  AND a.datname = current_database()
  AND a.pid <> pg_backend_pid()
  AND NOT (a.client_addr = $3 OR client_port = $4)","0","0","0","0","0","0","12","37.579125999999995","0.145125","8.199334","3.131593833333333","3.3037636277185407","12","12","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"1690194758776331229","select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT $1","0","0","0","0","0","0","1","7706.52442","7706.52442","7706.52442","7706.52442","0","1","32","1124761","0","0","0","0","0","0","13783","22214","2049.639527","0","31.947561","105.738544","0","0","0","41","2.817706","1","33.662041","1","237.062583","1","164.443498"
16384,16387,True,"-4562388769731358341","COPY ""psutil_disk_io_total"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","12","6.030625","0.094625","1.420167","0.5025520833333333","0.3651771635670962","12","6","18","18","0","0","0","0","0","0","0","2.761918","0","0","0","24","0","3264","0","0","0","0","0","0","0","0"
10,16385,True,"-1853949712389859857","select
    (extract($1 from now()) * $2)::int8 as epoch_ns,
    $3::int as is_up","0","0","0","0","0","0","24","92.08362299999999","0.004001","26.426208","3.836817624999999","5.7548091841177405","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-9162494700678824640","with sa_snapshot as (
  select * from pg_stat_activity
  where pid != pg_backend_pid()
  and datname = current_database()
)
select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  (select count(*) from sa_snapshot where backend_type = $3) as total,
  (select count(*) from pg_stat_activity where pid != pg_backend_pid()) as instance_total,
  current_setting($4)::int as max_connections,
  (select count(*) from sa_snapshot where backend_type = $5) as background_workers,
  (select count(*) from sa_snapshot where state = $6 and backend_type = $7) as active,
  (select count(*) from sa_snapshot where state = $8 and backend_type = $9) as idle,
  (select count(*) from sa_snapshot where state = $10 and backend_type = $11) as idleintransaction,
  (select count(*) from sa_snapshot where wait_event_type in ($12, $13, $14) and backend_type = $15) as waiting,
  (select coalesce(sum(case when coalesce(array_length(pg_blocking_pids(pid), $16), $17) >= $18 then $19 else $20 end), $21) from sa_snapshot where backend_type = $22 and state = $23) as blocked,
  (select ceil(extract($24 from max(now() - query_start)))::int from sa_snapshot where wait_event_type in ($25, $26, $27) and backend_type = $28) as longest_waiting_seconds,
  (select round(avg(abs(extract($29 from now() - query_start)))::numeric, $30)::float from sa_snapshot where wait_event_type in ($31, $32, $33) and backend_type = $34) as avg_waiting_seconds,
  (select ceil(extract($35 from (now() - backend_start)))::int from sa_snapshot where backend_type = $36 order by backend_start limit $37) as longest_session_seconds,
  (select round(avg(abs(extract($38 from now() - backend_start)))::numeric, $39)::float from sa_snapshot where backend_type = $40) as avg_session_seconds,
  (select ceil(extract($41 from (now() - xact_start)))::int from sa_snapshot where xact_start is not null and backend_type = $42 order by xact_start limit $43) as longest_tx_seconds,
  (select round(avg(abs(extract($44 from now() - xact_start)))::numeric, $45)::float from sa_snapshot where xact_start is not null and backend_type = $46) as avg_tx_seconds,
  (select ceil(extract($47 from (now() - xact_start)))::int from sa_snapshot where backend_type = $48 order by xact_start limit $49) as longest_autovacuum_seconds,
  (select ceil(extract($50 from max(now() - query_start)))::int from sa_snapshot where state = $51 and backend_type = $52) as longest_query_seconds,
  (select round(avg(abs(extract($53 from now() - query_start)))::numeric, $54)::float from sa_snapshot where state = $55 and backend_type = $56) as avg_query_seconds,
  (select max(age(backend_xmin))::int8 from sa_snapshot) as max_xmin_age_tx,
  (select count(*) from sa_snapshot where state = $57 and backend_type = $58) as av_workers","0","0","0","0","0","0","24","265.58879","1.0423749999999998","33.323167","11.066199583333331","8.913021477610473","24","173","5","0","0","0","0","0","0","0","0","0.050041","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-7332114557335485020","WITH q_stat_tables AS (
  SELECT * FROM pg_stat_user_tables t
  JOIN pg_class c ON c.oid = t.relid
  WHERE NOT schemaname LIKE $1
  AND c.relpages > ($2 / $3)    -- >10MB
),
q_stat_activity AS (
    SELECT * FROM pg_stat_activity
    WHERE datname = current_database() AND pid != pg_backend_pid()
)
SELECT
  (extract($4 from now()) * $5)::int8 as epoch_ns,
  case
      when pg_is_in_recovery() = $6 then
          pg_wal_lsn_diff(pg_current_wal_lsn(), $7)::int8
      else
          pg_wal_lsn_diff(pg_last_wal_replay_lsn(), $8)::int8
      end as wal_location_b,
  numbackends - $9 as numbackends,
  (select count(*) from q_stat_activity where state in ($10, $11)) AS active_backends,
  (select count(*) from q_stat_activity where wait_event_type in ($12, $13, $14)) AS blocked_backends,
  (select round(extract($15 from now()) - extract($16 from (select xact_start from q_stat_activity
    where datid = d.datid and not query like $17 order by xact_start limit $18))))::int AS kpi_oldest_tx_s,
  xact_commit + xact_rollback AS tps,
  xact_commit,
  xact_rollback,
  blks_read,
  blks_hit,
  temp_bytes,
  (select sum(seq_scan) from q_stat_tables)::int8 AS seq_scans_on_tbls_gt_10mb,
  tup_inserted,
  tup_updated,
  tup_deleted,
  (select sum(calls) from pg_stat_user_functions where not schemaname like any(array[$19, $20]))::int8 AS sproc_calls,
  blk_read_time,
  blk_write_time,
  deadlocks,
  case when pg_is_in_recovery() then $21 else $22 end as in_recovery_int,
  extract($23 from (now() - pg_postmaster_start_time()))::int8 as postmaster_uptime_s
FROM
  pg_stat_database d
WHERE
  datname = current_database()","0","0","0","0","0","0","12","229.077162","1.57375","54.966376","19.089763499999997","16.255951325458675","12","969","501","0","0","0","0","0","0","0","0","57.934073000000005","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"4078808272632536829","SELECT
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  dir_or_tablespace as tag_dir_or_tablespace,
  path as tag_path,
  total, used, free, percent
from
  get_psutil_disk()","0","0","0","0","0","0","12","2255.0971680000002","9.457","497.374792","187.92476399999998","188.48821130101786","24","1338","61","0","0","0","0","0","0","0","0","44.776919","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-4824836583136674934","COPY ""table_io_stats"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","2","5.4682509999999995","1.622167","3.846084","2.7341254999999998","1.1119585","8","107","19","11","0","0","0","0","0","0","0","2.936669","0","0","0","18","3","7778","0","0","0","0","0","0","0","0"
10,25481,True,"-8440239552580866290","SELECT
             gss_authenticated, encrypted
        FROM
            pg_catalog.pg_stat_gssapi
        WHERE pid = pg_backend_pid()","0","0","0","0","0","0","1","1.026624","1.026624","1.026624","1.026624","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-8623419497723448577","-- using 1687011170 as a seed to the RNG

create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= date '1997-05-01'
		and l_shipdate < date '1997-05-01' + interval '3' month
	group by
		l_suppkey","0","0","0","0","0","0","6","145.542293","20.87775","34.306542","24.257048833333336","4.6655439068760405","0","894","397","129","3","0","0","0","0","0","0","55.55842400000001","0","0","0","272","23","82884","0","0","0","0","0","0","0","0"
10,25481,True,"2397681704071010949","BEGIN","0","0","0","0","0","0","6","1.024917","0.163333","0.178541","0.1708195","0.005037630023135874","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-2225503879534115379","SET lock_timeout TO '100ms'","0","0","0","0","0","0","692","50.61012000000002","0.001","3.506792","0.07313601156069363","0.23507761681401426","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"2779569077347032716","DELETE FROM cache_data WHERE ($1 - created_at) >= expires AND expires <> $2","0","0","0","0","0","0","2","1.002167","0.211459","0.790708","0.5010835","0.2896245","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-1831392078361225642","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  p.oid::text as tag_oid,
  quote_ident(nspname)||$3||quote_ident(proname) as tag_sproc,
  md5(prosrc)
from
  pg_proc p
  join
  pg_namespace n on n.oid = pronamespace
where
  not nspname like any(array[$4, $5])","0","0","0","0","0","0","5","29.878958","1.454625","18.311666000000002","5.975791600000001","6.334761206682463","160","481","154","0","0","0","0","0","0","0","0","12.817962","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"2013159534999621399","-- using 1687011171 as a seed to the RNG


select
	s_name,
	count(*) as numwait
from
	supplier,
	lineitem l1,
	orders,
	nation
where
	s_suppkey = l1.l_suppkey
	and o_orderkey = l1.l_orderkey
	and o_orderstatus = $1
	and l1.l_receiptdate > l1.l_commitdate
	and exists (
		select
			*
		from
			lineitem l2
		where
			l2.l_orderkey = l1.l_orderkey
			and l2.l_suppkey <> l1.l_suppkey
	)
	and not exists (
		select
			*
		from
			lineitem l3
		where
			l3.l_orderkey = l1.l_orderkey
			and l3.l_suppkey <> l1.l_suppkey
			and l3.l_receiptdate > l3.l_commitdate
	)
	and s_nationkey = n_nationkey
	and n_name = $2
group by
	s_name
order by
	numwait desc,
	s_name
LIMIT $3","0","0","0","0","0","0","6","39957.580563","6106.117837","7083.61942","6659.5967605000005","294.8605206286576","600","20254080","3990057","0","75","0","0","0","0","0","0","10124.161229000001","1.665205","0","0","0","0","0","282","41.264921","6","224.500835","6","1796.7212090000003","6","1592.1850840000002"
16384,16387,True,"6457141847911443224","COPY ""db_stats"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","16.101249","0.102708","2.327833","0.6708853750000001","0.5527956471972572","24","30","72","72","3","0","0","0","0","0","0","8.151297","0","0","0","72","0","27950","0","0","0","0","0","0","0","0"
10,16385,True,"-5867960306600580609","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  quote_ident(nspname)||$3||quote_ident(c.relname) as tag_index,
  quote_ident(nspname)||$4||quote_ident(r.relname) as ""table"",
  i.indisvalid::text as is_valid,
  coalesce(md5(pg_get_indexdef(i.indexrelid)), random()::text) as md5
from
  pg_index i
  join
  pg_class c on c.oid = i.indexrelid
  join
  pg_class r on r.oid = i.indrelid
  join
  pg_namespace n on n.oid = c.relnamespace
where
  c.relnamespace not in (select oid from pg_namespace where nspname like any(array[$5, $6]))","0","0","0","0","0","0","5","19.265502","0.617876","10.561459000000001","3.8531004000000006","3.7291841528570617","40","1582","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"4727863047147899909","COPY ""archiver"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","14.230165","0.070333","5.906333","0.5929235416666667","1.1715851479763069","24","14","34","34","0","0","0","0","0","0","0","10.232292000000001","0","0","0","48","0","5664","0","0","0","0","0","0","0","0"
10,16385,True,"-6349735594358290259","select
   (extract($1 from now()) * $2)::int8 as epoch_ns,
   checkpoints_timed,
   checkpoints_req,
   checkpoint_write_time,
   checkpoint_sync_time,
   buffers_checkpoint,
   buffers_clean,
   maxwritten_clean,
   buffers_backend,
   buffers_backend_fsync,
   buffers_alloc
 from
   pg_stat_bgwriter","0","0","0","0","0","0","24","22.136749000000002","0.187083","7.9127920000000005","0.9223645416666668","1.6434279566454224","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-6950879001753960021","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  slot_name::text as tag_slot_name,
  coalesce(plugin, $3)::text as plugin,
  active,
  case when active then $4 else $5 end as non_active_int,
  pg_wal_lsn_diff(pg_current_wal_lsn(), restart_lsn)::int8 as restart_lsn_lag_b,
  greatest(age(xmin), age(catalog_xmin))::int8 as xmin_age_tx
from
  pg_replication_slots","0","0","0","0","0","0","12","2.075337","0.149334","0.205458","0.17294474999999998","0.01484377452629553","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"8955779173215163665","DELETE FROM short_url WHERE created_at <= $1 AND (last_seen_at IS NULL OR last_seen_at = $2)","0","0","0","0","0","0","2","0.076875","0.003084","0.073791","0.0384375","0.035353499999999996","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-7756552019526199616","select * from admin.ensure_partition_metric_time($1, $2)","0","0","0","0","0","0","2","8.142","0.36854200000000004","7.773458","4.071","3.702458","2","12","4","0","0","0","0","0","0","0","0","0.583208","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-782868727798575624","-- using 1687011168 as a seed to the RNG


select
	sum(l_extendedprice * l_discount) as revenue
from
	lineitem
where
	l_shipdate >= date $1
	and l_shipdate < date $2 + interval $3 year
	and l_discount between $4 - $5 and $6 + $7
	and l_quantity < $8
LIMIT $9","0","0","0","0","0","0","6","21738.097425","2953.256918","5321.232002000001","3623.0162375","791.5542123620866","6","0","3374370","0","0","0","0","0","0","0","0","9192.070083000002","0","0","0","0","0","0","48","5.4460429999999995","6","57.12170799999999","6","310.767583","6","197.99199800000002"
10,16385,True,"-5768097298865720502","select current_setting($1)::varchar(2) as lc_messages","0","0","0","0","0","0","11","21.145955999999998","0.538625","5.195291","1.9223596363636364","1.7969475499276428","11","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"1415028499643213595","-- using 1687011171 as a seed to the RNG


select
	c_name,
	c_custkey,
	o_orderkey,
	o_orderdate,
	o_totalprice,
	sum(l_quantity)
from
	customer,
	orders,
	lineitem
where
	o_orderkey in (
		select
			l_orderkey
		from
			lineitem
		group by
			l_orderkey having
				sum(l_quantity) > $1
	)
	and c_custkey = o_custkey
	and o_orderkey = l_orderkey
group by
	c_name,
	c_custkey,
	o_orderkey,
	o_orderdate,
	o_totalprice
order by
	o_totalprice desc,
	o_orderdate
LIMIT $2","0","0","0","0","0","0","6","89118.30325000001","13108.67784","16302.402382","14853.050541666667","1270.6453967916266","216","190498","4547717","0","61","0","0","0","0","431370","431622","24524.592506","2.235126","1108.2007230000002","3152.8207540000003","0","0","0","216","19.418789","6","60.851376","6","759.893417","6","647.1169590000001"
10,25481,True,"7938628011141446549","-- using 1687011170 as a seed to the RNG


select
	p_brand,
	p_type,
	p_size,
	count(distinct ps_suppkey) as supplier_cnt
from
	partsupp,
	part
where
	p_partkey = ps_partkey
	and p_brand <> $1
	and p_type not like $2
	and p_size in ($3, $4, $5, $6, $7, $8, $9, $10)
	and ps_suppkey not in (
		select
			s_suppkey
		from
			supplier
		where
			s_comment like $11
	)
group by
	p_brand,
	p_type,
	p_size
order by
	supplier_cnt desc,
	p_brand,
	p_type,
	p_size
LIMIT $12","0","0","0","0","0","0","6","17512.461801999998","2724.415293","3353.677668","2918.743633666667","201.11546671406913","6","534","195144","0","0","0","0","0","0","132594","132852","841.276689","0","245.46207900000002","684.325501","0","0","0","186","13.049166","0","0","6","13.726085000000001","6","143.541628"
10,16385,True,"-5602546581119251540","select /* pgwatch2_generated */ extname::text, (regexp_matches(extversion, $1))[$2]::text as extversion from pg_extension order by 1","0","0","0","0","0","0","73","87.64904100000004","0.012457","13.823834","1.2006717945205476","3.106512769231477","365","105","7","0","0","0","0","0","0","0","0","8.770208","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"3377722143456267570","COPY ""stat_statements_calls"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","10.209042","0.070167","1.726459","0.42537674999999997","0.372690752165949","24","14","34","34","0","0","0","0","0","0","0","5.415544","0","0","0","48","0","5568","0","0","0","0","0","0","0","0"
10,16385,True,"-5553206079057267442","SELECT
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  total, used, free, buff_cache, available, percent,
  swap_total, swap_used, swap_free, swap_percent
from
  get_psutil_mem()","0","0","0","0","0","0","12","2165.78121","0.708375","401.44570899999997","180.48176750000002","152.23091290016436","12","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"6811819842153739267","-- using 1687011168 as a seed to the RNG


select
	o_orderpriority,
	count(*) as order_count
from
	orders
where
	o_orderdate >= date $1
	and o_orderdate < date $2 + interval $3 month
	and exists (
		select
			*
		from
			lineitem
		where
			l_orderkey = o_orderkey
			and l_commitdate < l_receiptdate
	)
group by
	o_orderpriority
order by
	o_orderpriority
LIMIT $4","0","0","0","0","0","0","6","13395.220046","1264.6152909999998","2991.642793","2232.5366743333334","735.6972773321578","6","836358","1310010","0","35","0","0","0","0","7740","12582","8375.443716","0.496332","12.955235","48.865696","0","0","0","84","6.922460000000001","0","0","6","2.6747069999999997","6","39.452707"
10,25481,True,"3170858136560744772","-- using 1687011168 as a seed to the RNG


select
	l_orderkey,
	sum(l_extendedprice * ($1 - l_discount)) as revenue,
	o_orderdate,
	o_shippriority
from
	customer,
	orders,
	lineitem
where
	c_mktsegment = $2
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate < date $3
	and l_shipdate > date $4
group by
	l_orderkey,
	o_orderdate,
	o_shippriority
order by
	revenue desc,
	o_orderdate
LIMIT $5","0","0","0","0","0","0","6","52832.717482","7789.523837","9518.100213","8805.452913666664","595.4013946220286","60","4298","4260331","0","0","0","0","0","0","463956","464262","10417.867042","0","2216.6374530000003","3630.43634","0","0","0","198","8.434749","6","44.034167000000004","6","875.497126","6","593.570502"
10,25481,True,"5396452307251311530","select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT $1","0","0","0","0","0","0","1","7850.774504","7850.774504","7850.774504","7850.774504","0","1","32","1124761","0","0","0","0","0","0","13783","22214","2176.236791","0","26.271322","102.262885","0","0","0","41","2.915498","1","34.303667","1","241.388584","1","167.009751"
10,25481,True,"-8988853809533405397","SELECT
    db.oid as did, db.datname, db.datallowconn,
    pg_encoding_to_char(db.encoding) AS serverencoding,
    has_database_privilege(db.oid, $1) as cancreate,
    datistemplate
FROM
    pg_catalog.pg_database db
WHERE db.datname = current_database()","0","0","0","0","0","0","1","0.34308299999999997","0.34308299999999997","0.34308299999999997","0.34308299999999997","0","1","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"1526517813002326537","COPY ""index_stats"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","1","3.88625","3.88625","3.88625","3.88625","0","8","21","6","6","1","0","0","0","0","0","0","1.347042","0","0","0","18","0","11244","0","0","0","0","0","0","0","0"
16384,16387,True,"-2997048569009192011","COPY ""stat_statements"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","7","20.805166","1.307958","4.727917","2.972166571428571","0.9773344974170244","125","500","63","59","17","0","0","0","0","0","0","10.842793","0","0","0","280","4","180497","0","0","0","0","0","0","0","0"
10,16385,True,"7717999222864931934","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  case
    when pg_is_in_recovery() = $3 then
      pg_wal_lsn_diff(pg_current_wal_lsn(), $4)::int8
    else
      pg_wal_lsn_diff(pg_last_wal_replay_lsn(), $5)::int8
    end as xlog_location_b,
  case when pg_is_in_recovery() then $6 else $7 end as in_recovery_int,
  extract($8 from (now() - coalesce((pg_stat_file($9, $10)).modification, pg_postmaster_start_time())))::int8 as postmaster_uptime_s,
  system_identifier::text as tag_sys_id,
  case
    when pg_is_in_recovery() = $11 then
      ($12||substr(pg_walfile_name(pg_current_wal_lsn()), $13, $14))::bit(32)::int
    else
      (select min_recovery_end_timeline::int from pg_control_recovery())
    end as timeline
from pg_control_system()","0","0","0","0","0","0","24","49.49633300000001","0.35737399999999997","5.786166","2.0623472083333327","1.9062504568098682","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"-6992208588738980578","SELECT ""id"", ""operation_uid"", ""last_execution"", ""version"" FROM ""server_lock"" WHERE (operation_uid = $1)","0","0","0","0","0","0","2","1.9325830000000002","0.7562909999999999","1.1762920000000001","0.9662915000000001","0.21000050000000012","2","0","4","2","0","0","0","0","0","0","0","1.139167","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-3148917908490748806","COPY ""wal"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","10.725209","0.074083","2.104458","0.4468837083333333","0.462731711281087","24","30","68","69","1","0","0","0","0","0","0","6.099084000000001","0","0","0","72","0","13438","0","0","0","0","0","0","0","0"
16384,16386,True,"-8511892388789246327","SELECT ""org_id"", ""namespace"", ""key"" FROM ""kv_store"" WHERE (namespace = $1) AND (""key"" LIKE $2)","0","0","0","0","0","0","48","4.253086000000001","0.004291","0.642666","0.08860595833333332","0.12495416618970703","48","31","17","0","0","0","0","0","0","0","0","2.7840030000000002","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"-2161822839045126266","SELECT id
				FROM dashboard_version, (
					SELECT dashboard_id, count(version) as count, min(version) as min
					FROM dashboard_version
					GROUP BY dashboard_id
				) AS vtd
				WHERE dashboard_version.dashboard_id=vtd.dashboard_id
				AND version < vtd.min + vtd.count - $1
				LIMIT $2","0","0","0","0","0","0","2","0.14966600000000002","0.016666","0.133","0.07483300000000001","0.05816700000000001","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"-290491860970867573","select /* pgwatch2_generated */
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  s.query as query,
  count(*) as count
from pg_stat_activity s
where s.datname = current_database()
  and s.state = $3
  and s.backend_type = $4
  and s.pid != pg_backend_pid()
  and now() - s.query_start > $5::interval
group by s.query","0","0","0","0","0","0","48","191.12629900000002","0.07179200000000001","17.235291","3.981797895833333","3.760478606015748","10","164","2","0","0","0","0","0","0","0","0","0.023459","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"6218275080807350858","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  coalesce(sum(calls), $3)::int8 as calls,
  coalesce(round(sum(total_exec_time)::numeric, $4), $5)::float8 as total_time,
  round(sum(total_plan_time)::numeric, $6)::double precision as total_plan_time
from
  pg_stat_statements
where
  dbid = (select oid from pg_database where datname = current_database())","0","0","0","0","0","0","24","146.08629099999996","0.22137400000000002","25.223375","6.086928791666668","5.61005800166855","24","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"4339532240342777240","SELECT uid, org_id, interval_seconds, version FROM alert_rule","0","0","0","0","0","0","145","4.0793","0.007125","0.33433300000000005","0.02813310344827586","0.038188822891399486","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"3461285208274386257","SELECT
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  schemaname::text AS tag_schema,
  funcname::text  AS tag_function_name,
  quote_ident(schemaname)||$3||quote_ident(funcname) as tag_function_full_name,
  p.oid::text as tag_oid, -- for overloaded funcs
  calls as sp_calls,
  self_time,
  total_time
FROM
  pg_stat_user_functions f
  JOIN
  pg_proc p ON p.oid = f.funcid
ORDER BY
  total_time DESC
LIMIT
  $4","0","0","0","0","0","0","8","43.464707000000004","0.7526660000000001","18.794167","5.4330883750000005","5.7082822257615495","48","702","276","0","0","0","0","0","0","0","0","11.464161","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"8150942640591136752","SET statement_timeout TO '5s'","0","0","0","0","0","0","692","1.2326739999999972","0.000375","0.273","0.0017813208092485552","0.011154686179674609","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-2414222542276737812","COPY ""psutil_disk"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","12","9.728294","0.17925","1.463625","0.8106911666666667","0.43801497222333113","24","50","36","38","1","0","0","0","0","0","0","7.042332999999999","0","0","0","60","0","14396","0","0","0","0","0","0","0","0"
10,25481,True,"450838253780030881","-- using 1687011169 as a seed to the RNG


select
	nation,
	o_year,
	sum(amount) as sum_profit
from
	(
		select
			n_name as nation,
			extract($1 from o_orderdate) as o_year,
			l_extendedprice * ($2 - l_discount) - ps_supplycost * l_quantity as amount
		from
			part,
			supplier,
			lineitem,
			partsupp,
			orders,
			nation
		where
			s_suppkey = l_suppkey
			and ps_suppkey = l_suppkey
			and ps_partkey = l_partkey
			and p_partkey = l_partkey
			and o_orderkey = l_orderkey
			and s_nationkey = n_nationkey
			and p_name like $3
	) as profit
group by
	nation,
	o_year
order by
	nation,
	o_year desc
LIMIT $4","0","0","0","0","0","0","6","32445.150264","3767.379167","9248.527254","5407.525044","1880.1152385169346","6","924472","1831724","0","0","0","0","0","0","12312","22566","24347.834257","0","13.724524","94.739358","0","0","0","288","9.938410000000001","6","69.74579200000001","6","866.5549179999999","6","676.510043"
10,25481,True,"-3809702839993979407","-- using 1687011170 as a seed to the RNG


select
	$1 * sum(case
		when p_type like $2
			then l_extendedprice * ($3 - l_discount)
		else $4
	end) / sum(l_extendedprice * ($5 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_partkey = p_partkey
	and l_shipdate >= date $6
	and l_shipdate < date $7 + interval $8 month
LIMIT $9","0","0","0","0","0","0","6","30046.956722","3396.056001","6678.004918","5007.826120333333","1007.3997555511036","6","13132","3484130","0","0","0","0","0","0","44346","44736","13001.802090000001","0","165.77258799999998","410.348122","0","0","0","102","28.269202999999997","6","247.882792","6","1345.472751","6","1319.765588"
16384,16386,True,"-2096205478522934330","BEGIN READ WRITE","0","0","0","0","0","0","14","16.151126999999995","0.00575","10.753375","1.1536519285714286","2.828279339734963","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"1505624950136192552","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  quote_ident(table_schema)||$3||quote_ident(table_name) as tag_table,
  md5((array_agg((c.*)::text order by ordinal_position))::text)
from (
 SELECT current_database()::information_schema.sql_identifier AS table_catalog,
    nc.nspname::information_schema.sql_identifier AS table_schema,
    c.relname::information_schema.sql_identifier AS table_name,
    a.attname::information_schema.sql_identifier AS column_name,
    a.attnum::information_schema.cardinal_number AS ordinal_position,
    pg_get_expr(ad.adbin, ad.adrelid)::information_schema.character_data AS column_default,
        CASE
            WHEN a.attnotnull OR t.typtype = $4::""char"" AND t.typnotnull THEN $5::text
            ELSE $6::text
        END::information_schema.yes_or_no AS is_nullable,
        CASE
            WHEN t.typtype = $7::""char"" THEN
            CASE
                WHEN bt.typelem <> $8::oid AND bt.typlen = $9::integer THEN $10::text
                WHEN nbt.nspname = $11::name THEN format_type(t.typbasetype, $12::integer)
                ELSE $13::text
            END
            ELSE
            CASE
                WHEN t.typelem <> $14::oid AND t.typlen = $15::integer THEN $16::text
                WHEN nt.nspname = $17::name THEN format_type(a.atttypid, $18::integer)
                ELSE $19::text
            END
        END::information_schema.character_data AS data_type,
    information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*))::information_schema.cardinal_number AS character_maximum_length,
    information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*))::information_schema.cardinal_number AS character_octet_length,
    information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*))::information_schema.cardinal_number AS numeric_precision,
    information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*))::information_schema.cardinal_number AS numeric_precision_radix,
    information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*))::information_schema.cardinal_number AS numeric_scale,
    information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*))::information_schema.cardinal_number AS datetime_precision,
    information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*))::information_schema.character_data AS interval_type,
    $20::integer::information_schema.cardinal_number AS interval_precision,
    $21::character varying::information_schema.sql_identifier AS character_set_catalog,
    $22::character varying::information_schema.sql_identifier AS character_set_schema,
    $23::character varying::information_schema.sql_identifier AS character_set_name,
        CASE
            WHEN nco.nspname IS NOT NULL THEN current_database()
            ELSE $24::name
        END::information_schema.sql_identifier AS collation_catalog,
    nco.nspname::information_schema.sql_identifier AS collation_schema,
    co.collname::information_schema.sql_identifier AS collation_name,
        CASE
            WHEN t.typtype = $25::""char"" THEN current_database()
            ELSE $26::name
        END::information_schema.sql_identifier AS domain_catalog,
        CASE
            WHEN t.typtype = $27::""char"" THEN nt.nspname
            ELSE $28::name
        END::information_schema.sql_identifier AS domain_schema,
        CASE
            WHEN t.typtype = $29::""char"" THEN t.typname
            ELSE $30::name
        END::information_schema.sql_identifier AS domain_name,
    current_database()::information_schema.sql_identifier AS udt_catalog,
    COALESCE(nbt.nspname, nt.nspname)::information_schema.sql_identifier AS udt_schema,
    COALESCE(bt.typname, t.typname)::information_schema.sql_identifier AS udt_name,
    $31::character varying::information_schema.sql_identifier AS scope_catalog,
    $32::character varying::information_schema.sql_identifier AS scope_schema,
    $33::character varying::information_schema.sql_identifier AS scope_name,
    $34::integer::information_schema.cardinal_number AS maximum_cardinality,
    a.attnum::information_schema.sql_identifier AS dtd_identifier,
    $35::character varying::information_schema.yes_or_no AS is_self_referencing,
    $36::character varying::information_schema.yes_or_no AS is_identity,
    $37::character varying::information_schema.character_data AS identity_generation,
    $38::character varying::information_schema.character_data AS identity_start,
    $39::character varying::information_schema.character_data AS identity_increment,
    $40::character varying::information_schema.character_data AS identity_maximum,
    $41::character varying::information_schema.character_data AS identity_minimum,
    $42::character varying::information_schema.yes_or_no AS identity_cycle,
    $43::character varying::information_schema.character_data AS is_generated,
    $44::character varying::information_schema.character_data AS generation_expression,
        CASE
            WHEN c.relkind = $45::""char"" OR (c.relkind = ANY (ARRAY[$46::""char"", $47::""char""])) AND pg_column_is_updatable(c.oid::regclass, a.attnum, $48) THEN $49::text
            ELSE $50::text
        END::information_schema.yes_or_no AS is_updatable
   FROM pg_attribute a
     LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
     JOIN (pg_class c
     JOIN pg_namespace nc ON c.relnamespace = nc.oid) ON a.attrelid = c.oid
     JOIN (pg_type t
     JOIN pg_namespace nt ON t.typnamespace = nt.oid) ON a.atttypid = t.oid
     LEFT JOIN (pg_type bt
     JOIN pg_namespace nbt ON bt.typnamespace = nbt.oid) ON t.typtype = $51::""char"" AND t.typbasetype = bt.oid
     LEFT JOIN (pg_collation co
     JOIN pg_namespace nco ON co.collnamespace = nco.oid) ON a.attcollation = co.oid AND (nco.nspname <> $52::name OR co.collname <> $53::name)
  WHERE NOT pg_is_other_temp_schema(nc.oid) AND a.attnum > $54 AND NOT a.attisdropped AND (c.relkind = ANY (ARRAY[$55::""char"", $56::""char"", $57::""char""]))

) c
where
  not table_schema like any (array[$58, $59])
group by
  table_schema, table_name
order by
  table_schema, table_name","0","0","0","0","0","0","5","199.88249800000003","29.595041","54.886333","39.9764996","9.198068171640122","55","1321","189","0","0","0","0","0","0","0","0","26.166211000000004","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-7657947300092433552","select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT $1","0","0","0","0","0","0","1","11200.639422","11200.639422","11200.639422","11200.639422","0","1","32","1124761","0","0","0","0","0","0","13783","22214","4933.568046","0","32.934076","127.871985","0","0","0","41","3.054665","1","38.386208","1","276.745874","1","179.901005"
16384,16387,True,"-3507127428261943465","COPY ""instance_up"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","7.206873","0.070375","1.425292","0.30028637500000005","0.32658731690108705","24","14","34","34","0","0","0","0","0","0","0","2.468457","0","0","0","48","0","4176","0","0","0","0","0","0","0","0"
16384,16386,True,"-2690745124710581455","SELECT ""id"", ""org_id"", ""alertmanagers"", ""send_alerts_to"", ""created_at"", ""updated_at"" FROM ""ngalert_configuration""","0","0","0","0","0","0","24","2.440911","0.008499","1.8935","0.101704625","0.3743970106765914","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-2414439892892349202","-- using 1687011169 as a seed to the RNG


select
	ps_partkey,
	sum(ps_supplycost * ps_availqty) as value
from
	partsupp,
	supplier,
	nation
where
	ps_suppkey = s_suppkey
	and s_nationkey = n_nationkey
	and n_name = $1
group by
	ps_partkey having
		sum(ps_supplycost * ps_availqty) > (
			select
				sum(ps_supplycost * ps_availqty) * $2
			from
				partsupp,
				supplier,
				nation
			where
				ps_suppkey = s_suppkey
				and s_nationkey = n_nationkey
				and n_name = $3
		)
order by
	value desc
LIMIT $4","0","0","0","0","0","0","6","27051.266516000003","3981.731628","5144.797919000001","4508.544419333333","428.77484723464124","0","425421","1627773","0","25","0","0","0","0","4962","9924","24136.263703","0.269835","14.907139","66.075253","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"7299199919828511469","-- using 1687011168 as a seed to the RNG


select
	supp_nation,
	cust_nation,
	l_year,
	sum(volume) as revenue
from
	(
		select
			n1.n_name as supp_nation,
			n2.n_name as cust_nation,
			extract($1 from l_shipdate) as l_year,
			l_extendedprice * ($2 - l_discount) as volume
		from
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2
		where
			s_suppkey = l_suppkey
			and o_orderkey = l_orderkey
			and c_custkey = o_custkey
			and s_nationkey = n1.n_nationkey
			and c_nationkey = n2.n_nationkey
			and (
				(n1.n_name = $3 and n2.n_name = $4)
				or (n1.n_name = $5 and n2.n_name = $6)
			)
			and l_shipdate between date $7 and date $8
	) as shipping
group by
	supp_nation,
	cust_nation,
	l_year
order by
	supp_nation,
	cust_nation,
	l_year
LIMIT $9","0","0","0","0","0","0","6","51857.293022","7616.540336","10369.744171","8642.882170333332","1064.8205109631174","6","6484888","5473988","0","2","0","0","0","0","112860","149670","24181.254334","0.031126","221.50081699999998","542.6460059999999","0","0","0","288","13.312172","6","54.228415000000005","6","1158.795417","6","758.29608"
16384,16387,True,"5710158309546501909","COPY ""locks_mode"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","21.324751999999993","0.169833","3.093875","0.8885313333333333","0.8209253591038116","192","553","92","80","4","0","0","0","0","0","0","14.161043000000003","0","0","0","416","0","77985","0","0","0","0","0","0","0","0"
16384,16387,True,"1418490002577798194","COPY ""wal_size"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","12","6.093459","0.142625","2.7115","0.5077882500000002","0.7004135602688749","12","6","18","18","0","0","0","0","0","0","0","2.6775","0","0","0","24","0","2184","0","0","0","0","0","0","0","0"
10,25481,True,"-597569764262573984","-- using 1687011171 as a seed to the RNG


select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from $1 for $2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from $3 for $4) in
				($5, $6, $7, $8, $9, $10, $11)
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > $12
					and substring(c_phone from $13 for $14) in
						($15, $16, $17, $18, $19, $20, $21)
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as custsale
group by
	cntrycode
order by
	cntrycode
LIMIT $22","0","0","0","0","0","0","6","5976.902797000001","876.975625","1177.2444600000001","996.1504661666668","99.76958108542345","6","213079","253253","0","1","0","0","0","0","1218","2070","2514.348889","0.025","1.667344","15.889344999999999","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"6267560253942376699","select * from (
                  with recursive
                      q_root_part as (
                            select c.oid,
                                   c.relkind,
                                   n.nspname root_schema,
                                   c.relname root_relname
                            from pg_class c
                                     join pg_namespace n on n.oid = c.relnamespace
                            where relkind in ($1, $2)
                              and relpersistence != $3
                              and not n.nspname like any (array[$4, $5, $6])
                              and not exists(select * from pg_inherits where inhrelid = c.oid)
                              and exists(select * from pg_inherits where inhparent = c.oid)
                      ),
                      q_parts (relid, relkind, level, root) as (
                          select oid, relkind, $7, oid
                          from q_root_part
                          union all
                          select inhrelid, c.relkind, level + $8, q.root
                          from pg_inherits i
                                   join q_parts q on inhparent = q.relid
                                   join pg_class c on c.oid = i.inhrelid
                      ),
                      q_tstats as (
                          SELECT (extract($9 from now()) * $10)::int8                as epoch_ns,
                                 relid,
                                 schemaname::text                                       as tag_schema,
                                 relname::text                                          as tag_table_name,
                                 quote_ident(schemaname) || $11 || quote_ident(relname) as tag_table_full_name,
                                 heap_blks_read,
                                 heap_blks_hit,
                                 idx_blks_read,
                                 idx_blks_hit,
                                 toast_blks_read,
                                 toast_blks_hit,
                                 tidx_blks_read,
                                 tidx_blks_hit
                          FROM pg_statio_user_tables
                          WHERE NOT schemaname LIKE $12
                            AND (heap_blks_read > $13 OR heap_blks_hit > $14 OR idx_blks_read > $15 OR idx_blks_hit > $16 OR
                                 tidx_blks_read > $17 OR
                                 tidx_blks_hit > $18)
                      )
                  select epoch_ns,
                         tag_schema,
                         tag_table_name,
                         tag_table_full_name,
                         $19 as is_part_root,
                         heap_blks_read,
                         heap_blks_hit,
                         idx_blks_read,
                         idx_blks_hit,
                         toast_blks_read,
                         toast_blks_hit,
                         tidx_blks_read,
                         tidx_blks_hit
                  from q_tstats
                  where not tag_schema like $20
                  and not exists (select * from q_root_part where oid = q_tstats.relid)

                  union all

                  select *
                  from (
                           select epoch_ns,
                                  quote_ident(qr.root_schema)                                        as tag_schema,
                                  quote_ident(qr.root_relname)                                       as tag_table_name,
                                  quote_ident(qr.root_schema) || $21 || quote_ident(qr.root_relname) as tag_table_full_name,
                                  $22                                                                  as is_part_root,
                                  sum(heap_blks_read)::int8,
                                  sum(heap_blks_hit)::int8,
                                  sum(idx_blks_read)::int8,
                                  sum(idx_blks_hit)::int8,
                                  sum(toast_blks_read)::int8,
                                  sum(toast_blks_hit)::int8,
                                  sum(tidx_blks_read)::int8,
                                  sum(tidx_blks_hit)::int8
                           from q_tstats ts
                                    join q_parts qp on qp.relid = ts.relid
                                    join q_root_part qr on qr.oid = qp.root
                           group by 1, 2, 3, 4
                       ) x
              ) y
order by
  coalesce(heap_blks_read, $23) +
  coalesce(heap_blks_hit, $24) +
  coalesce(idx_blks_read, $25) +
  coalesce(idx_blks_hit, $26) +
  coalesce(toast_blks_read, $27) +
  coalesce(toast_blks_hit, $28) +
  coalesce(tidx_blks_read, $29) +
  coalesce(tidx_blks_hit, $30)
  desc limit $31","0","0","0","0","0","0","2","11.921168","0.43762599999999996","11.483542","5.960584","5.522958","8","145","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"2185569066101618614","/* NB! does not return all index stats but biggest, top scanned and biggest unused ones */
WITH q_locked_rels AS (
  select relation from pg_locks where mode = $1
),
q_index_details AS (
  select
    sui.schemaname,
    sui.indexrelname,
    sui.relname,
    sui.indexrelid,
    coalesce(pg_relation_size(sui.indexrelid), $2) as index_size_b,
    sui.idx_scan,
    sui.idx_tup_read,
    sui.idx_tup_fetch,
    io.idx_blks_read,
    io.idx_blks_hit,
    i.indisvalid,
    i.indisprimary,
    i.indisunique,
    i.indisexclusion
  from
    pg_stat_user_indexes sui
    join pg_statio_user_indexes io on io.indexrelid = sui.indexrelid
    join pg_index i on i.indexrelid = sui.indexrelid
  where not sui.schemaname like any (array [$3, $4])
  and not exists (select * from q_locked_rels where relation = sui.relid or relation = sui.indexrelid)
),
q_top_indexes AS (
    /* biggest */
    select *
    from (
             select indexrelid
             from q_index_details
             where idx_scan > $5
             order by index_size_b desc
             limit $6
         ) x
    union
    /* most block traffic */
    select *
    from (
             select indexrelid
             from q_index_details
             order by coalesce(idx_blks_read, $7) + coalesce(idx_blks_hit, $8) desc
             limit $9
         ) y
    union
    /* most scans */
    select *
    from (
             select indexrelid
             from q_index_details
             order by idx_scan desc nulls last
             limit $10
         ) z
    union
    /* biggest unused non-constraint */
    select *
    from (
             select q.indexrelid
             from q_index_details q
             where idx_scan = $11
             and not (indisprimary or indisunique or indisexclusion)
             order by index_size_b desc
             limit $12
         ) z
    union
    /* all invalid */
    select *
    from (
             select q.indexrelid
             from q_index_details q
             where not indisvalid
         ) zz
)
SELECT
  (extract($13 from now()) * $14)::int8 as epoch_ns,
  schemaname::text as tag_schema,
  indexrelname::text as tag_index_name,
  quote_ident(schemaname)||$15||quote_ident(indexrelname) as tag_index_full_name,
  relname::text as tag_table_name,
  quote_ident(schemaname)||$16||quote_ident(relname) as tag_table_full_name,
  coalesce(idx_scan, $17) as idx_scan,
  coalesce(idx_tup_read, $18) as idx_tup_read,
  coalesce(idx_tup_fetch, $19) as idx_tup_fetch,
  coalesce(index_size_b, $20) as index_size_b,
  quote_ident(schemaname)||$21||quote_ident(indexrelname) as index_full_name_val,
  md5(regexp_replace(regexp_replace(pg_get_indexdef(indexrelid),indexrelname,$22), $23,$24)) as tag_index_def_hash,
  regexp_replace(regexp_replace(pg_get_indexdef(indexrelid),indexrelname,$25), $26,$27) as index_def,
  case when not indisvalid then $28 else $29 end as is_invalid_int,
  case when indisprimary then $30 else $31 end as is_pk_int,
  case when indisunique or indisexclusion then $32 else $33 end as is_uq_or_exc,
  system_identifier::text as tag_sys_id
FROM
  q_index_details id
  JOIN
  pg_control_system() ON $34
WHERE
  indexrelid IN (select indexrelid from q_top_indexes)
ORDER BY
  id.schemaname, id.relname, id.indexrelname","0","0","0","0","0","0","1","38.294624","38.294624","38.294624","38.294624","0","8","832","23","0","0","0","0","0","0","0","0","5.907624","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-2563412158741520104","SELECT version()","0","0","0","0","0","0","1","0.065458","0.065458","0.065458","0.065458","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"-1975730872553467817","UPDATE server_lock SET
			version = $1,
			last_execution = $2
		WHERE
			id = $3 AND version = $4","0","0","0","0","0","0","2","21.160583","6.516042","14.644541","10.5802915","4.064249500000001","2","6","2","0","0","0","0","0","0","0","0","0.015417","0","0","0","2","1","1317","0","0","0","0","0","0","0","0"
10,16385,True,"-3194945204007327660","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  pg_database_size(current_database()) as size_b,
  (select sum(pg_total_relation_size(c.oid))::int8
   from pg_class c join pg_namespace n on n.oid = c.relnamespace
   where nspname = $3 and relkind = $4
  ) as catalog_size_b","0","0","0","0","0","0","5","54.531083","6.378125","19.355292","10.9062166","4.9444936429242015","5","7515","42","0","0","0","0","0","0","0","0","7.6388739999999995","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"3631999513949216380","drop view revenue0","0","0","0","0","0","0","6","47.296251000000005","5.842041","10.116625","7.8827085","1.567039165564234","0","1194","129","0","0","0","0","0","0","0","0","24.082081000000002","0","0","0","91","0","4972","0","0","0","0","0","0","0","0"
10,25481,True,"-3984013937811865237","SELECT
            roles.oid as id, roles.rolname as name,
            roles.rolsuper as is_superuser,
            CASE WHEN roles.rolsuper THEN $1 ELSE roles.rolcreaterole END as
            can_create_role,
            CASE WHEN roles.rolsuper THEN $2
            ELSE roles.rolcreatedb END as can_create_db,
            CASE WHEN $3=ANY(ARRAY(WITH RECURSIVE cte AS (
            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
                WHERE pg_roles.oid = roles.oid
            UNION ALL
            SELECT m.roleid,pgr.rolname FROM cte cte_1
                JOIN pg_auth_members m ON m.member = cte_1.oid
                JOIN pg_roles pgr ON pgr.oid = m.roleid)
            SELECT rolname  FROM cte)) THEN $4
            ELSE $5 END as can_signal_backend
        FROM
            pg_catalog.pg_roles as roles
        WHERE
            rolname = current_user","0","0","0","0","0","0","1","2.018208","2.018208","2.018208","2.018208","0","1","4","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-5322729758175347714","COPY ""stat_activity"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","10","4.912375000000001","0.106333","1.374458","0.4912375","0.35626387131401627","10","6","16","18","1","0","0","0","0","0","0","3.1356659999999996","0","0","0","20","0","7433","0","0","0","0","0","0","0","0"
10,16385,True,"4489416499223506068","SELECT
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  application_name as tag_application_name,
  concat(coalesce(client_addr::text, client_hostname), $3, client_port::text) as tag_client_info,
  coalesce(pg_wal_lsn_diff(case when pg_is_in_recovery() then pg_last_wal_receive_lsn() else pg_current_wal_lsn() end, write_lsn)::int8, $4) as write_lag_b,
  coalesce(pg_wal_lsn_diff(case when pg_is_in_recovery() then pg_last_wal_receive_lsn() else pg_current_wal_lsn() end, flush_lsn)::int8, $5) as flush_lag_b,
  coalesce(pg_wal_lsn_diff(case when pg_is_in_recovery() then pg_last_wal_receive_lsn() else pg_current_wal_lsn() end, replay_lsn)::int8, $6) as replay_lag_b,
  (extract($7 from write_lag) * $8)::int8 as write_lag_ms,
  (extract($9 from flush_lag) * $10)::int8 as flush_lag_ms,
  (extract($11 from replay_lag) * $12)::int8 as replay_lag_ms,
  state,
  sync_state,
  case when sync_state in ($13, $14) then $15 else $16 end as is_sync_int,
  case when pg_is_in_recovery() then $17 else $18 end as in_recovery_int
from
  /* NB! when the query fails, grant ""pg_monitor"" system role (exposing all stats) to the monitoring user
     or create specifically the ""get_stat_replication"" helper and use that instead of pg_stat_replication
  */
  pg_stat_replication
where
  coalesce(application_name, $19) not in ($20, $21)","0","0","0","0","0","0","12","49.14558099999999","0.22908299999999998","19.483416","4.095465083333334","5.3106208655778255","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"7492049896095066345","/* NB! If using not a real superuser but a role with ""pg_monitor"" grant then below execute grant is needed:
  GRANT EXECUTE ON FUNCTION pg_stat_file(text) to pgwatch2;
*/
select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
   (sum((pg_stat_file($3 || name)).size))::int8 as wal_size_b
from pg_ls_waldir()","0","0","0","0","0","0","12","15.960333999999998","0.311709","6.950375","1.3300278333333333","1.8391779935898371","12","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"6196354891907007741","COPY ""table_stats"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","5","8.035667","0.252875","2.957875","1.6071334000000002","0.9202254185729929","25","64","21","19","3","0","0","0","0","0","0","4.8811230000000005","0","0","0","56","0","30924","0","0","0","0","0","0","0","0"
10,16385,True,"-2631316463926565594","select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  round(load_1min::numeric, $3)::float as load_1min,
  round(load_5min::numeric, $4)::float as load_5min,
  round(load_15min::numeric, $5)::float as load_15min
from
  get_load_average()","0","0","0","0","0","0","24","3153.291339","0.744875","449.117084","131.387139125","118.71459514551917","24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-7762807539165105915","SET client_encoding='UTF8'","0","0","0","0","0","0","1","0.011875","0.011875","0.011875","0.011875","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"1819064965949763676","-- using 1687011167 as a seed to the RNG


select
	s_acctbal,
	s_name,
	n_name,
	p_partkey,
	p_mfgr,
	s_address,
	s_phone,
	s_comment
from
	part,
	supplier,
	partsupp,
	nation,
	region
where
	p_partkey = ps_partkey
	and s_suppkey = ps_suppkey
	and p_size = $1
	and p_type like $2
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = $3
	and ps_supplycost = (
		select
			min(ps_supplycost)
		from
			partsupp,
			supplier,
			nation,
			region
		where
			p_partkey = ps_partkey
			and s_suppkey = ps_suppkey
			and s_nationkey = n_nationkey
			and n_regionkey = r_regionkey
			and r_name = $4
	)
order by
	s_acctbal desc,
	n_name,
	s_name,
	p_partkey
LIMIT $5","0","0","0","0","0","0","6","22189.78326","2829.434085","4185.422627","3698.2972099999997","530.4079983625684","600","3898432","2142119","0","138","0","0","0","0","114096","114096","14532.036786","1.995587","338.713179","1238.099387","0","0","0","342","10.69943","0","0","6","6.241585000000001","6","149.62679400000002"
10,25481,True,"4278084489898726885","-- using 1687011169 as a seed to the RNG


select
	o_year,
	sum(case
		when nation = $1 then volume
		else $2
	end) / sum(volume) as mkt_share
from
	(
		select
			extract($3 from o_orderdate) as o_year,
			l_extendedprice * ($4 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = $5
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date $6 and date $7
			and p_type = $8
	) as all_nations
group by
	o_year
order by
	o_year
LIMIT $9","0","0","0","0","0","0","6","64815.590363","9753.206171","11512.023297000002","10802.598393833334","607.676972724018","6","18283471","9909215","0","97","0","0","0","0","12600","15456","40908.452743","1.575173","24.678903","60.721301999999994","0","0","0","342","17.644372","0","0","6","8.569333","6","145.49332900000002"
10,25481,True,"-7828248469682243801","-- using 1687011171 as a seed to the RNG


select
	sum(l_extendedprice* ($1 - l_discount)) as revenue
from
	lineitem,
	part
where
	(
		p_partkey = l_partkey
		and p_brand = $2
		and p_container in ($3, $4, $5, $6)
		and l_quantity >= $7 and l_quantity <= $8 + $9
		and p_size between $10 and $11
		and l_shipmode in ($12, $13)
		and l_shipinstruct = $14
	)
	or
	(
		p_partkey = l_partkey
		and p_brand = $15
		and p_container in ($16, $17, $18, $19)
		and l_quantity >= $20 and l_quantity <= $21 + $22
		and p_size between $23 and $24
		and l_shipmode in ($25, $26)
		and l_shipinstruct = $27
	)
	or
	(
		p_partkey = l_partkey
		and p_brand = $28
		and p_container in ($29, $30, $31, $32)
		and l_quantity >= $33 and l_quantity <= $34 + $35
		and p_size between $36 and $37
		and l_shipmode in ($38, $39)
		and l_shipinstruct = $40
	)
LIMIT $41","0","0","0","0","0","0","6","7228.443004","918.087292","1408.779543","1204.7405006666665","183.8299986351469","6","31715","568843","0","1","0","0","0","0","0","0","5674.667241","0.026708","0","0","0","0","0","84","13.801839","0","0","6","5.77479","6","77.09678699999999"
16384,16387,True,"2125934186956047738","COPY ""psutil_mem"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","12","7.027208","0.2245","0.920458","0.5856006666666667","0.2041678599385537","12","6","18","18","0","0","0","0","0","0","0","4.213291","0","0","0","24","0","5192","0","0","0","0","0","0","0","0"
16384,16387,True,"-3004679192785716474","COPY ""db_size"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","5","4.709084","0.05625","2.601375","0.9418168","0.8652409955575152","5","2","8","8","0","0","0","0","0","0","0","1.18004","0","0","0","10","0","1040","0","0","0","0","0","0","0","0"
10,16385,True,"-4147388141144982290","with recursive /* pgwatch2_generated */
    q_root_part as (
        select c.oid,
               c.relkind,
               n.nspname root_schema,
               c.relname root_relname
        from pg_class c
                 join pg_namespace n on n.oid = c.relnamespace
        where relkind in ($1, $2)
          and relpersistence != $3
          and not n.nspname like any (array[$4, $5, $6])
          and not exists(select * from pg_inherits where inhrelid = c.oid)
          and exists(select * from pg_inherits where inhparent = c.oid)
    ),
    q_parts (relid, relkind, level, root) as (
        select oid, relkind, $7, oid
        from q_root_part
        union all
        select inhrelid, c.relkind, level + $8, q.root
        from pg_inherits i
                 join q_parts q on inhparent = q.relid
                 join pg_class c on c.oid = i.inhrelid
    ),
    q_tstats as (
        select (extract($9 from now()) * $10)::int8                                                  as epoch_ns,
               relid, -- not sent to final output
               quote_ident(schemaname)                                                                  as tag_schema,
               quote_ident(ut.relname)                                                                  as tag_table_name,
               quote_ident(schemaname) || $11 || quote_ident(ut.relname)                                as tag_table_full_name,
               pg_table_size(relid)                                                                     as table_size_b,
               abs(greatest(ceil(log((pg_table_size(relid) + $12) / $13 ^ $14)), $15))::text                   as tag_table_size_cardinality_mb, -- i.e. 0=<1MB, 1=<10MB, 2=<100MB,..
               pg_total_relation_size(relid)                                                            as total_relation_size_b,
               case when c.reltoastrelid != $16 then pg_total_relation_size(c.reltoastrelid) else $17::int8 end as toast_size_b,
               (extract($18 from now() - greatest(last_vacuum, last_autovacuum)))::int8               as seconds_since_last_vacuum,
               (extract($19 from now() - greatest(last_analyze, last_autoanalyze)))::int8             as seconds_since_last_analyze,
               case when $20 = ANY (c.reloptions) then $21 else $22 end                as no_autovacuum,
               seq_scan,
               seq_tup_read,
               coalesce(idx_scan, $23) as idx_scan,
               coalesce(idx_tup_fetch, $24) as idx_tup_fetch,
               n_tup_ins,
               n_tup_upd,
               n_tup_del,
               n_tup_hot_upd,
               n_live_tup,
               n_dead_tup,
               vacuum_count,
               autovacuum_count,
               analyze_count,
               autoanalyze_count,
               age(c.relfrozenxid) as tx_freeze_age
        from pg_stat_user_tables ut
            join pg_class c on c.oid = ut.relid
            left join pg_class t on t.oid = c.reltoastrelid
            left join pg_index ti on ti.indrelid = t.oid
            left join pg_class tir on tir.oid = ti.indexrelid
        where
          -- leaving out fully locked tables as pg_relation_size also wants a lock and would wait
          not exists (select $25 from pg_locks where relation = relid and mode = $26)
          and c.relpersistence != $27 -- and temp tables
        order by case when c.relkind = $28 then $29::int else coalesce(c.relpages, $30) + coalesce(t.relpages, $31) + coalesce(tir.relpages, $32) end desc
        limit $33 /* NB! When changing the bottom final LIMIT also adjust this limit. Should be at least 5x bigger as approx sizes depend a lot on vacuum frequency.
                    The general idea is to reduce filesystem ""stat""-ing on tables that won't make it to final output anyways based on approximate size */
    )

select /* pgwatch2_generated */
    epoch_ns,
    tag_schema,
    tag_table_name,
    tag_table_full_name,
    $34 as is_part_root,
    table_size_b,
    tag_table_size_cardinality_mb, -- i.e. 0=<1MB, 1=<10MB, 2=<100MB,..
    total_relation_size_b,
    toast_size_b,
    seconds_since_last_vacuum,
    seconds_since_last_analyze,
    no_autovacuum,
    seq_scan,
    seq_tup_read,
    idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_live_tup,
    n_dead_tup,
    vacuum_count,
    autovacuum_count,
    analyze_count,
    autoanalyze_count,
    tx_freeze_age
from q_tstats
where not tag_schema like $35
and not exists (select * from q_root_part where oid = q_tstats.relid)

union all

select * from (
    select
        epoch_ns,
        quote_ident(qr.root_schema) as tag_schema,
        quote_ident(qr.root_relname) as tag_table_name,
        quote_ident(qr.root_schema) || $36 || quote_ident(qr.root_relname) as tag_table_full_name,
        $37 as is_part_root,
        sum(table_size_b)::int8 table_size_b,
        abs(greatest(ceil(log((sum(table_size_b) + $38) / $39 ^ $40)),
             $41))::text as tag_table_size_cardinality_mb, -- i.e. 0=<1MB, 1=<10MB, 2=<100MB,..
        sum(total_relation_size_b)::int8 total_relation_size_b,
        sum(toast_size_b)::int8 toast_size_b,
        min(seconds_since_last_vacuum)::int8 seconds_since_last_vacuum,
        min(seconds_since_last_analyze)::int8 seconds_since_last_analyze,
        sum(no_autovacuum)::int8 no_autovacuum,
        sum(seq_scan)::int8 seq_scan,
        sum(seq_tup_read)::int8 seq_tup_read,
        sum(idx_scan)::int8 idx_scan,
        sum(idx_tup_fetch)::int8 idx_tup_fetch,
        sum(n_tup_ins)::int8 n_tup_ins,
        sum(n_tup_upd)::int8 n_tup_upd,
        sum(n_tup_del)::int8 n_tup_del,
        sum(n_tup_hot_upd)::int8 n_tup_hot_upd,
        sum(n_live_tup)::int8 n_live_tup,
        sum(n_dead_tup)::int8 n_dead_tup,
        sum(vacuum_count)::int8 vacuum_count,
        sum(autovacuum_count)::int8 autovacuum_count,
        sum(analyze_count)::int8 analyze_count,
        sum(autoanalyze_count)::int8 autoanalyze_count,
        max(tx_freeze_age)::int8 tx_freeze_age
      from
           q_tstats ts
           join q_parts qp on qp.relid = ts.relid
           join q_root_part qr on qr.oid = qp.root
      group by
           1, 2, 3, 4
) x
order by table_size_b desc nulls last limit $42","0","0","0","0","0","0","5","62.008749","5.977749","24.251584","12.4017498","6.39891708481213","25","1756","45","0","0","0","0","0","0","0","0","13.468872","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-3664604032589424797","COPY ""stat_ssl"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","12","4.841708","0.058708","1.24775","0.4034756666666666","0.3033327034935768","12","6","18","18","0","0","0","0","0","0","0","2.3564599999999998","0","0","0","24","0","2496","0","0","0","0","0","0","0","0"
10,25481,True,"-7363898342359107977","-- using 1687011169 as a seed to the RNG


select
	l_shipmode,
	sum(case
		when o_orderpriority = $1
			or o_orderpriority = $2
			then $3
		else $4
	end) as high_line_count,
	sum(case
		when o_orderpriority <> $5
			and o_orderpriority <> $6
			then $7
		else $8
	end) as low_line_count
from
	orders,
	lineitem
where
	o_orderkey = l_orderkey
	and l_shipmode in ($9, $10)
	and l_commitdate < l_receiptdate
	and l_shipdate < l_commitdate
	and l_receiptdate >= date $11
	and l_receiptdate < date $12 + interval $13 year
group by
	l_shipmode
order by
	l_shipmode
LIMIT $14","0","0","0","0","0","0","6","36601.077017","4968.523586","7168.5462529999995","6100.179502833333","918.6699447994865","6","1403766","3832548","0","66","0","0","0","0","2574","3024","13838.568415999998","0.688583","4.432386","20.298389","0","0","0","78","6.987915000000001","6","52.311249","6","667.936374","6","435.44009099999994"
16384,16387,True,"-9211688832367924801","COPY ""sproc_stats"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","8","11.082291","0.204667","1.977041","1.3852863750000002","0.5872701843193509","48","131","33","30","1","0","0","0","0","0","0","8.592165000000001","0","0","0","107","0","35405","0","0","0","0","0","0","0","0"
10,16385,True,"-5211212914554999735","WITH q_data AS (
    SELECT
        queryid::text AS tag_queryid,
        /*
         NB! if security conscious about exposing query texts replace the below expression with a dash ('-') OR
         use the stat_statements_no_query_text metric instead, created specifically for this use case.
         */
        array_to_string(array_agg(DISTINCT quote_ident(pg_get_userbyid(userid))), $1) AS users,
        sum(s.calls)::int8 AS calls,
        round(sum(s.total_exec_time)::numeric, $2)::double precision AS total_time,
        sum(shared_blks_hit)::int8 AS shared_blks_hit,
        sum(shared_blks_read)::int8 AS shared_blks_read,
        sum(shared_blks_written)::int8 AS shared_blks_written,
        sum(shared_blks_dirtied)::int8 AS shared_blks_dirtied,
        sum(temp_blks_read)::int8 AS temp_blks_read,
        sum(temp_blks_written)::int8 AS temp_blks_written,
        round(sum(blk_read_time)::numeric, $3)::double precision AS blk_read_time,
        round(sum(blk_write_time)::numeric, $4)::double precision AS blk_write_time,
        round(sum(temp_blk_read_time)::numeric, $5)::double precision AS temp_blk_read_time,
        round(sum(temp_blk_write_time)::numeric, $6)::double precision AS temp_blk_write_time,
        sum(wal_fpi)::int8 AS wal_fpi,
        sum(wal_bytes)::int8 AS wal_bytes,
        round(sum(s.total_plan_time)::numeric, $7)::double precision AS total_plan_time,
        max(query::varchar(8000)) AS query
    FROM
        pg_stat_statements s
    WHERE
        calls > $8
        AND total_exec_time > $9
        AND dbid = (
            SELECT
                oid
            FROM
                pg_database
            WHERE
                datname = current_database())
            AND NOT upper(s.query::varchar(50))
            LIKE ANY (ARRAY[$10,
                $11,
                $12,
                $13,
                $14,
                $15,
                $16,
                $17,
                $18])
        GROUP BY
            queryid
)
SELECT
    (EXTRACT($19 FROM now()) * $20)::int8 AS epoch_ns,
    b.tag_queryid,
    b.users,
    b.calls,
    b.total_time,
    b.shared_blks_hit,
    b.shared_blks_read,
    b.shared_blks_written,
    b.shared_blks_dirtied,
    b.temp_blks_read,
    b.temp_blks_written,
    b.blk_read_time,
    b.blk_write_time,
    b.temp_blk_read_time,
    b.temp_blk_write_time,
    b.wal_fpi,
    b.wal_bytes,
    b.total_plan_time,
    ltrim(regexp_replace(b.query, $21, $22, $23)) AS tag_query
FROM (
    SELECT
        *
    FROM (
        SELECT
            *
        FROM
            q_data
        WHERE
            total_time > $24
        ORDER BY
            total_time DESC
        LIMIT $25) a
UNION
SELECT
    *
FROM (
    SELECT
        *
    FROM
        q_data
    ORDER BY
        calls DESC
    LIMIT $26) a
UNION
SELECT
    *
FROM (
    SELECT
        *
    FROM
        q_data
    WHERE
        shared_blks_read > $27
    ORDER BY
        shared_blks_read DESC
    LIMIT $28) a
UNION
SELECT
    *
FROM (
    SELECT
        *
    FROM
        q_data
    WHERE
        shared_blks_written > $29
    ORDER BY
        shared_blks_written DESC
    LIMIT $30) a
UNION
SELECT
    *
FROM (
    SELECT
        *
    FROM
        q_data
    WHERE
        temp_blks_read > $31
    ORDER BY
        temp_blks_read DESC
    LIMIT $32) a
UNION
SELECT
    *
FROM (
    SELECT
        *
    FROM
        q_data
    WHERE
        temp_blks_written > $33
    ORDER BY
        temp_blks_written DESC
    LIMIT $34) a) b","0","0","0","0","0","0","8","201.697249","2.174666","45.195208","25.212156125","14.462215998352885","125","67","2","0","0","0","0","0","0","0","0","0.029415999999999998","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-6725907279475143812","SELECT n.nspname, r.relname
FROM pg_catalog.pg_class r
    LEFT JOIN pg_catalog.pg_namespace n ON (r.relnamespace = n.oid)
WHERE r.oid = $1","0","0","0","0","0","0","1","3.406208","3.406208","3.406208","3.406208","0","1","4","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16387,True,"-2096205478522934330","BEGIN READ WRITE","0","0","0","0","0","0","93","3.386209","0.009416","0.197083","0.03641084946236561","0.03358773688270869","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,16385,True,"3929101140599698388","SELECT
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  read_count,
  write_count,
  read_bytes,
  write_bytes
from
  get_psutil_disk_io_total()","0","0","0","0","0","0","12","2129.331045","1.389458","426.433709","177.44425375000003","157.9996601365301","12","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-699892568854201504","-- using 1687011170 as a seed to the RNG


select
	c_count,
	count(*) as custdist
from
	(
		select
			c_custkey,
			count(o_orderkey)
		from
			customer left outer join orders on
				c_custkey = o_custkey
				and o_comment not like $1
		group by
			c_custkey
	) as c_orders (c_custkey, c_count)
group by
	c_count
order by
	custdist desc,
	c_count desc
LIMIT $2","0","0","0","0","0","0","6","34492.478557999995","5233.766753","6308.413587","5748.746426333333","373.04040157775995","6","1707","793371","0","1","0","0","0","0","335400","524358","2792.6040420000004","0.013459","765.6113499999999","2937.460564","0","0","0","192","10.763458","6","86.050375","6","560.414625","6","359.30716800000005"
16384,16387,True,"-7133822432435231630","COPY ""server_log_event_counts"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","23","31.613834000000004","0.355916","5.60725","1.3745145217391306","1.1869027904554545","23","10","38","37","1","0","0","0","0","0","0","5.509582","0","0","0","46","0","12372","0","0","0","0","0","0","0","0"
10,16385,True,"-5686858967054750225","with q_sr as (
  select * from pg_subscription_rel
)
select
  (extract($1 from now()) * $2)::int8 as epoch_ns,
  subname::text as tag_subname,
  subenabled,
  (select count(*) from q_sr where srsubid = oid) as relcount,
  (select count(*) from q_sr where srsubid = oid and srsubstate = $3) as state_i,
  (select count(*) from q_sr where srsubid = oid and srsubstate = $4) as state_d,
  (select count(*) from q_sr where srsubid = oid and srsubstate = $5) as state_s,
  (select count(*) from q_sr where srsubid = oid and srsubstate = $6) as state_r
from
  pg_subscription
where
  subdbid = (select oid from pg_database where datname = current_database())","0","0","0","0","0","0","12","0.18166599999999997","0.003167","0.046958","0.015138833333333336","0.01206378231065568","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"1765707138943557145","select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT $1","0","0","0","0","0","0","1","11962.269923000002","11962.269923000002","11962.269923000002","11962.269923000002","0","1","32","1124761","0","0","0","0","0","0","13783","22214","5547.90954","0","50.072026","131.114761","0","0","0","41","3.254416","1","36.828249","1","275.102585","1","165.416584"
16384,16385,True,"8647381567773660378","select /* pgwatch2_generated */ m_name, m_pg_version_from::text, m_sql, m_master_only, m_standby_only,
			  coalesce(m_column_attrs::text, $1) as m_column_attrs, coalesce(m_column_attrs::text, $2) as m_column_attrs,
			  coalesce(ma_metric_attrs::text, $3) as ma_metric_attrs, m_sql_su
			from
              pgwatch2.metric
              left join
              pgwatch2.metric_attribute on (ma_metric_name = m_name)
			where
              m_is_active
		    order by
		      1, 2","0","0","0","0","0","0","6","33.254706","0.8843749999999999","10.784208999999999","5.542451","3.6028491690438087","840","178","92","0","0","0","0","0","0","0","0","8.631043","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"-9102340379957223432","UPDATE temp_user SET status = $1, updated = $2 WHERE created <= $3 AND status in ($4, $5)","0","0","0","0","0","0","2","4.268626","0.397501","3.871125","2.134313","1.736812","0","8","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
16384,16386,True,"1173118080304948989","SELECT ""id"", ""alertmanager_configuration"", ""configuration_hash"", ""configuration_version"", ""created_at"", ""default"", ""org_id"" FROM ""alert_configuration"" WHERE id IN (SELECT MAX(id) FROM alert_configuration GROUP BY org_id)","0","0","0","0","0","0","24","24.934086","0.055708999999999995","17.307708","1.03892025","3.401234799164504","24","31","17","0","0","0","0","0","0","0","0","12.417997000000002","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
10,25481,True,"-2004558998418799363","-- using 1687011168 as a seed to the RNG


select
	n_name,
	sum(l_extendedprice * ($1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = $2
	and o_orderdate >= date $3
	and o_orderdate < date $4 + interval $5 year
group by
	n_name
order by
	revenue desc
LIMIT $6","0","0","0","0","0","0","6","25821.136258000002","3415.390876","5497.189502","4303.522709666668","777.4956318956434","6","3100005","3343899","0","32","0","0","0","0","30492","30594","14460.179786","4.998043","67.116317","204.76978","0","0","0","324","11.665961000000001","6","69.586584","6","1127.099416","6","745.024374"
16384,16387,True,"4709104495144793399","COPY ""bgwriter"" (""time"", ""dbname"", ""data"", ""tag_data"") FROM STDIN","0","0","0","0","0","0","24","10.030874","0.074292","3.754917","0.41795308333333336","0.7281035301029721","24","14","36","35","1","0","0","0","0","0","0","6.315796","0","0","0","48","0","11998","0","0","0","0","0","0","0","0"
16384,16386,True,"4215584675368069295","SELECT max(id) as id FROM login_attempt WHERE created < $1","0","0","0","0","0","0","2","0.560208","0.160209","0.399999","0.280104","0.11989499999999999","2","4","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"
